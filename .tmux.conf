# Inspired by https://github.com/nicknisi/dotfiles/
set -g status on
set -g status-keys vi

set -g history-limit 1000000

unbind C-b
set -g prefix C-Space
bind C-Space send-prefix

set -g default-terminal "screen-256color"
# set -g status-utf8 on

set-option -g pane-active-border-fg blue

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# make delay shorter
set -sg escape-time 0
set -sg repeat-time 600

# Quick pane cycling
# unbind ^A
# bind ^A select-pane -t :.+

# tile all windows
unbind =
bind = select-layout tiled

# make window/pane index start with 1
set -g base-index 1
setw -g pane-base-index 1

set-option -g set-titles on
# set-option -g set-titles-string "#T - #W"
set -g set-titles-string '#S:#I.#P #W'

# Autorename sanely.
setw -g automatic-rename on

# Better name management
bind c new-window
bind , command-prompt "rename-window '%%'"

# More straight forward key bindings for splitting
unbind %
bind | split-window -h
bind h split-window -h
unbind '"'
bind - split-window -v
bind v split-window -v

######################
##### Key Bindings ####
#######################

# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

# reload config file
bind r source-file ~/.tmux.conf \; display "Config Reloaded!"

# # quickly open a new window
bind N new-window

# # split window and fix path for tmux 1.9
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# # synchronize all panes in a window
bind y setw synchronize-panes

# # pane movement shortcuts
#bind h select-pane -L
#bind j select-pane -D
#bind k select-pane -U
#bind l select-pane -R

bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# # Resize pane shortcuts
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# enable mouse support for switching panes/windows
set -g mouse on

bind-key -T root PPage if-shell -F "#{alternate_on}" "send-keys PPage" "copy-mode -e; send-keys PPage"
bind-key -T copy-mode-vi PPage send-keys -X page-up
bind-key -T copy-mode-vi NPage send-keys -X page-down

bind -T root WheelUpPane if-shell -F -t = "#{alternate_on}" "select-pane -t =; send-keys -M" "select-pane -t =; copy-mode -e; send-keys -M"
bind -T root WheelDownPane if-shell -F -t = "#{alternate_on}" "select-pane -t =; send-keys -M" "select-pane -t =; send-keys -M"
bind-key -T copy-mode-vi WheelUpPane send-keys -X halfpage-up
bind-key -T copy-mode-vi WheelDownPane send-keys -X halfpage-down

# set vi mode for copy mode
setw -g mode-keys vi
# more settings to make copy-mode more vim-like

# Workaround for accessing macOS' pasteboard
# https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard

if-shell \
    'test "$(uname -s)" = Darwin' \
    'set-option -g default-command "exec reattach-to-user-namespace -l $SHELL"'

# Remap the copy & paste keys to work as in vim
unbind [
bind Escape copy-mode
unbind p
bind p paste-buffer
bind-key -T copy-mode-vi "v" send-keys -X begin-selection
bind-key -T copy-mode-vi "y" send-keys -X copy-selection

#############
### Theme ###
#############

# source-file ~/.config/tmux/.solarized.light.theme
source-file ~/.config/tmux/.solarized.dark.theme

set -g pane-active-border-fg green
set -g pane-border-bg default
set -g pane-border-fg colour244


# Notified when something happens in one of the other windows
setw -g monitor-activity on
set -g visual-activity on

# Periodically refresh the status bar
set -g status-interval 60

# Customize what is displayed
set -g status-justify left
set -g status-left-length 50
set -g status-left " #S / "
#                     └─ current session name
set -g status-right " %R "
#                     └─ current time
