# Inspired by https://github.com/nicknisi/dotfiles/
set -g status on
set -g status-keys vi

set -g history-limit 1000000

unbind C-b
set -g prefix C-Space
bind C-Space send-prefix

set -g default-terminal "screen-256color"
set -g status-utf8 on


# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# make delay shorter
set -sg escape-time 0
set -sg repeat-time 600

# Quick pane cycling
# unbind ^A
# bind ^A select-pane -t :.+

# tile all windows
unbind =
bind = select-layout tiled

# make window/pane index start with 1
set -g base-index 1
setw -g pane-base-index 1

set-option -g set-titles on
# set-option -g set-titles-string "#T - #W"
set -g set-titles-string '#S:#I.#P #W'

# Autorename sanely.
setw -g automatic-rename on

# Better name management
bind c new-window
bind , command-prompt "rename-window '%%'"

# More straight forward key bindings for splitting
unbind %
bind | split-window -h
bind h split-window -h
unbind '"'
bind - split-window -v
bind v split-window -v

######################
##### Key Bindings ####
#######################

# reload config file
bind r source-file ~/.tmux.conf \; display "Config Reloaded!"

# # quickly open a new window
bind N new-window

# # split window and fix path for tmux 1.9
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# # synchronize all panes in a window
bind y setw synchronize-panes

# # pane movement shortcuts
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# # Resize pane shortcuts
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# enable mouse support for switching panes/windows
setw -g mouse on


bind-key -T root PPage if-shell -F "#{alternate_on}" "send-keys PPage" "copy-mode -e; send-keys PPage"
bind-key -t vi-copy PPage page-up
bind-key -t vi-copy NPage page-down

bind -T root WheelUpPane if-shell -F -t = "#{alternate_on}" "select-pane -t =; send-keys -M" "select-pane -t =; copy-mode -e; send-keys -M"
bind -T root WheelDownPane if-shell -F -t = "#{alternate_on}" "select-pane -t =; send-keys -M" "select-pane -t =; send-keys -M"
bind-key -t vi-copy WheelUpPane halfpage-up
bind-key -t vi-copy WheelDownPane halfpage-down

# set vi mode for copy mode
setw -g mode-keys vi
# more settings to make copy-mode more vim-like
unbind [
bind Space copy-mode
unbind p
bind p paste-buffer
bind -t vi-copy 'v' begin-selection
bind -t vi-copy 'y' copy-selection

# Buffers to/from Mac clipboard, yay tmux book from pragprog
bind C-c run "tmux save-buffer - | reattach-to-user-namespace pbcopy"
bind C-v run "tmux set-buffer $(reattach-to-user-namespace pbpaste); tmux paste-buffer"

#############
### Theme ###
#############

source-file ~/.config/tmux/.solarized.light.theme

#source-file ~/.tmux.conf
#new-session -s dev -n ide
#split-window -v -p 10 -t dev
#select-pane -t 1
#split-window -h -p 30 -t dev
#new-window -n shell
#select-window -t dev:1
#select-pane -t 1
